apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ccf-app.fullname" . }}
  labels:
    {{- include "ccf-app.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "ccf-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ccf-app.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ccf-app.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: APP_PORT
              value: "{{ .Values.service.port }}"
            - name: CCF_DB_DRIVER
              value: "postgres"
            - name: CCF_DB_HOST
              value: {{ if .Values.database.local.enabled }}"{{ include "ccf-app.fullname" . }}-postgresql"{{ else }}"{{ .Values.database.external.host }}"{{ end }}
            - name: CCF_DB_PORT
              value: "{{ if .Values.database.local.enabled }}5432{{ else }}{{ .Values.database.external.port }}{{ end }}"
            - name: CCF_DB_NAME
              value: "{{- if .Values.database.local.enabled }}{{ .Values.database.local.database }}{{- else }}{{ .Values.database.external.database }}{{- end }}"
            - name: CCF_DB_USER
              value: "{{ if .Values.database.local.enabled }}{{ .Values.database.local.username }}{{ else }}{{ .Values.database.external.username }}{{ end }}"
            - name: CCF_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.database.local.enabled }}{{ include "ccf-app.fullname" . }}-psql{{ else }}{{ .Values.database.external.existingSecret }}{{ end }}
                  key: {{ if .Values.database.local.enabled }}POSTGRES_PASSWORD{{ else }}{{ .Values.database.external.passwordKey }}{{ end }}
            - name: CCF_DB_CONNECTION
              value: "\"host=$(CCF_DB_HOST) port=$(CCF_DB_PORT) dbname=$(CCF_DB_NAME) user=$(CCF_DB_USER) password=$(CCF_DB_PASSWORD) sslmode=disable\""
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      initContainers:
        - name: wait-for-postgres
          image: "{{ .Values.database.local.image.repository }}:{{ .Values.database.local.image.tag | default 17.5 }}"
          imagePullPolicy: {{ .Values.database.local.image.pullPolicy }}
          command: ['sh', '-c', 'until pg_isready -h {{ if .Values.database.local.enabled }}{{ include "ccf-app.fullname" . }}-postgresql{{ else }}{{ .Values.database.external.host }}{{ end }} -p {{ if .Values.database.local.enabled }}5432{{ else }}{{ .Values.database.external.port }}{{ end }} -U {{ if .Values.database.local.enabled }}{{ .Values.database.local.username }}{{ else }}{{ .Values.database.external.username }}{{ end }}; do echo waiting for database; sleep 2; done;']
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.database.local.enabled }}{{ include "ccf-app.fullname" . }}-psql{{ else }}{{ .Values.database.external.existingSecret }}{{ end }}
                  key: {{ if .Values.database.local.enabled }}POSTGRES_PASSWORD{{ else }}{{ .Values.database.external.passwordKey }}{{ end }}
        - name: migrate-db
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          command: ['sh', '-c', 'echo "Running DB migrations..." && ./api migrate up']
          env:
            - name: CCF_DB_DRIVER
              value: "postgres"
            - name: CCF_DB_HOST
              value: {{ if .Values.database.local.enabled }}"{{ include "ccf-app.fullname" . }}-postgresql"{{ else }}"{{ .Values.database.external.host }}"{{ end }}
            - name: CCF_DB_PORT
              value: "{{ if .Values.database.local.enabled }}5432{{ else }}{{ .Values.database.external.port }}{{ end }}"
            - name: CCF_DB_NAME
              value: "{{ if .Values.database.local.enabled }}{{ .Values.database.local.database }}{{ else }}{{ .Values.database.external.database }}{{ end }}"
            - name: CCF_DB_USER
              value: "{{ if .Values.database.local.enabled }}{{ .Values.database.local.username }}{{ else }}{{ .Values.database.external.username }}{{ end }}"
            - name: CCF_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.database.local.enabled }}{{ include "ccf-app.fullname" . }}-psql{{ else }}{{ .Values.database.external.existingSecret }}{{ end }}
                  key: {{ if .Values.database.local.enabled }}POSTGRES_PASSWORD{{ else }}{{ .Values.database.external.passwordKey }}{{ end }}
            - name: CCF_DB_CONNECTION
              value: "\"host=$(CCF_DB_HOST) port=$(CCF_DB_PORT) dbname=$(CCF_DB_NAME) user=$(CCF_DB_USER) password=$(CCF_DB_PASSWORD) sslmode=disable\""
        - name: create-user
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          command: ['sh', '-c', 'echo "Creating default user..." && ./api users add -f admin -l user -e admin@localhost -p Pa55w0rd']
          env:
            - name: CCF_DB_DRIVER
              value: "postgres"
            - name: CCF_DB_HOST
              value: {{ if .Values.database.local.enabled }}"{{ include "ccf-app.fullname" . }}-postgresql"{{ else }}"{{ .Values.database.external.host }}"{{ end }}
            - name: CCF_DB_PORT
              value: "{{ if .Values.database.local.enabled }}5432{{ else }}{{ .Values.database.external.port }}{{ end }}"
            - name: CCF_DB_NAME
              value: "{{ if .Values.database.local.enabled }}{{ .Values.database.local.database }}{{ else }}{{ .Values.database.external.database }}{{ end }}"
            - name: CCF_DB_USER
              value: "{{ if .Values.database.local.enabled }}{{ .Values.database.local.username }}{{ else }}{{ .Values.database.external.username }}{{ end }}"
            - name: CCF_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.database.local.enabled }}{{ include "ccf-app.fullname" . }}-psql{{ else }}{{ .Values.database.external.existingSecret }}{{ end }}
                  key: {{ if .Values.database.local.enabled }}POSTGRES_PASSWORD{{ else }}{{ .Values.database.external.passwordKey }}{{ end }}
            - name: CCF_DB_CONNECTION
              value: "\"host=$(CCF_DB_HOST) port=$(CCF_DB_PORT) dbname=$(CCF_DB_NAME) user=$(CCF_DB_USER) password=$(CCF_DB_PASSWORD) sslmode=disable\""
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}